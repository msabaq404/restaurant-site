---
import BaseLayout from "../layouts/BaseLayout.astro";
import Hero from "../components/Hero.svelte";
import Recipe from "../components/Recipe.svelte";
import RecipeSlider from "../components/RecipeSlider.svelte";
import Reservation from "../components/Reservation.svelte";
import Cart from "../components/Cart.svelte";
import Hero1 from "../assets/1.webp";
import Hero2 from "../assets/2.webp";
import Hero3 from "../assets/3.webp";
import Hero4 from "../assets/4.webp";
import recipes from "../assets/recipes.json";
import { getImage } from "astro:assets";
import type { ImageMetadata } from "astro";
import Image from "astro/components/Image.astro";


// For Hero Images
async function heroImages(image: ImageMetadata, portrait = false) {
  return await getImage({
    src: image,
    width: portrait ? 500 : 800,
    height: portrait ? 800 : 500,
    format: "webp",
  });
}

const heroImagesOptimized = await Promise.all(
  [
    heroImages(Hero1, true),
    heroImages(Hero2, false),
    heroImages(Hero3, false),
    heroImages(Hero4, false),
  ].map(async (promise) => (await promise).src)
);


// For Menu Images

async function optimizeMenuImage(image: ImageMetadata) {
  return await getImage({
    src: image,
    width: 500,
    height: 500,
    format: "webp",
  });
}

const menuImagesImports: Record<string, { default: ImageMetadata }> =
  import.meta.glob("../assets/menu-images/*.webp", { eager: true });

const menuImagesPromises = Object.entries(menuImagesImports).map(
  async ([path, image]) => {
    const fileName = path.split("/").pop()?.split(".")[0] || "";
    console.log(`Processing image: ${fileName}`);
    const optimizedImage = await optimizeMenuImage(image.default);
    return [fileName, optimizedImage.src];
  }
);

const menuImagesMap = Object.fromEntries(await Promise.all(menuImagesPromises));

const menuData = recipes.map((sectionData) =>
  Object.assign(
    { section: sectionData.section },
    {
      recipes: sectionData.recipes
        .map((recipe) =>
          Object.assign(recipe, {
            imageUrl:
              menuImagesMap[recipe.name.toLowerCase().replaceAll(" ", "-")],
          })
        )
        .sort(() => Math.random() - 0.5),
    }
  )
);

// console.log("Menu Data:", menuData[0].recipes[1].imageUrl);
---

<BaseLayout>
  <Hero client:load {heroImagesOptimized} />
  <Recipe client:load sectionData={menuData[0]} />
  <div class="wave">
    <svg
      class="h-28 w-screen"
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 1440 320"
      preserveAspectRatio="none"
    >
      <path
        d="M0,96L26.7,101.3C53.3,107,107,117,160,149.3C213.3,181,267,235,320,245.3C373.3,256,427,224,480,181.3C533.3,139,587,85,640,80C693.3,75,747,117,800,133.3C853.3,149,907,139,960,154.7C1013.3,171,1067,213,1120,218.7C1173.3,224,1227,192,1280,186.7C1333.3,181,1387,203,1413,213.3L1440,224"
        fill="none"
        class="stroke-[2.5vw] stroke-amber-600/40"
        stroke-linecap="round"></path>
    </svg>
  </div> 
  <Recipe client:load sectionData={menuData[1]} />
  <div class="star h-18 w-full flex justify-center items-center">
    <svg
      xmlns="http://www.w3.org/2000/svg"
      class="h-full"
      viewBox="0 0 1000 100"
      ><path
        class="fill-amber-500/40"
        d="M500 0c0 28-22 50-50 50 28 0 50 22 50 50 0-28 22-50 50-50-28 0-50-22-50-50ZM620 10c0 22-18 40-40 40 22 0 40 18 40 40 0-22 18-40 40-40-22 0-40-18-40-40ZM380 10c0 22-18 40-40 40 22 0 40 18 40 40 0-22 18-40 40-40-22 0-40-18-40-40ZM720 20c0 17-13 30-30 30 17 0 30 13 30 30 0-17 13-30 30-30-17 0-30-13-30-30ZM280 20c0 17-13 30-30 30 17 0 30 13 30 30 0-17 13-30 30-30-17 0-30-13-30-30Z"
      ></path></svg
    >
  </div>
  <RecipeSlider client:load sectionData={menuData[2]} />
  <div class="diamond h-12 w-full flex justify-center items-center">
    <svg xmlns="http://www.w3.org/2000/svg" height="100%" viewBox="0 0 1000 100"
      ><path
        fill="oklch(0.9 0.04 67.29)"
        d="m465 50 35-35 35 35-35 35zM565 50l35-35 35 35-35 35zM665 50l35-35 35 35-35 35zM365 50l35-35 35 35-35 35zM265 50l35-35 35 35-35 35z"
      ></path></svg
    >
  </div>
  <RecipeSlider client:load sectionData={menuData[3]} />
  <Reservation client:load />
  <Cart client:load />
</BaseLayout>
